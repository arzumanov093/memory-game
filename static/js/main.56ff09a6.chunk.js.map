{"version":3,"sources":["components/Card/Card.js","components/App/App.js","index.js"],"names":["Card","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEaA,EAAO,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAS/C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBACIE,UAAU,QACVC,IAAKL,EAAKK,IACVC,IAAI,eAER,qBACIF,UAAU,OACVC,IAAI,iBACJC,IAAI,YACJC,QAnBI,WACXJ,GACDF,EAAaD,YCFnBQ,G,MAAa,CACjB,CAAC,IAAO,mBAAoBC,SAAS,GACrC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,mBAAoBA,SAAS,GACrC,CAAC,IAAO,qBAAsBA,SAAS,GACvC,CAAC,IAAO,qBAAsBA,SAAS,GACvC,CAAC,IAAO,cAAeA,SAAS,GAChC,CAAC,IAAO,cAAeA,SAAS,GAChC,CAAC,IAAO,iBAAkBA,SAAS,KAgFtBC,MA7Ef,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAEMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cAErCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAGLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAGhD4B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GAERJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIb8B,KAEDC,YAAW,kBAAOD,MAAa,QAGjC,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAEZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAY,KAClCd,GAAY,IAOd,OAJAQ,qBAAU,WACRP,MACC,IAGD,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,MAAMG,QAASc,EAAjC,qEAEA,qBAAKjB,UAAU,gBAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQhB,oBAAGvB,UAAU,OAAb,wFAAoCU,SClF1CqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56ff09a6.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nexport const Card = ({card, handleChoice, flipped, disabled}) => {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card)\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className='card'>\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img \r\n                    className='front' \r\n                    src={card.src} \r\n                    alt='card front'\r\n                />\r\n                <img \r\n                    className='back' \r\n                    src='/img/cover.png'\r\n                    alt='card back'\r\n                    onClick={handleClick}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\nimport { Card } from '../Card/Card';\nimport './App.css';\n\nconst cardImages = [\n  {\"src\": \"/img/arsenal.png\", matched: false},\n  {\"src\": \"/img/chelsea.png\", matched: false},\n  {\"src\": \"/img/everton.png\", matched: false},\n  {\"src\": \"/img/leicester.png\", matched: false},\n  {\"src\": \"/img/liverpool.png\", matched: false},\n  {\"src\": \"/img/mc.png\", matched: false},\n  {\"src\": \"/img/mu.png\", matched: false},\n  {\"src\": \"/img/spurs.png\", matched: false}\n];\n\nfunction App() {\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id: Math.random()}))\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else {\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n       setTimeout(() =>  resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  console.log(cards)\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  }\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <button className='btn' onClick={shuffleCards}>новая игра</button>\n\n      <div className='cards-wrapper'>\n        {cards.map(card => (\n          <Card \n            key={card.id} \n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p className='text'>Сделано ходов: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}